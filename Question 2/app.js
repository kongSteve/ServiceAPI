var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');
const mongoose = require('mongoose');
const swaggerUi = require('swagger-ui-express');

const swaggerJsdoc = require('swagger-jsdoc');


const options = {
    swaggerDefinition: {
      // Like the one described here: https://swagger.io/specification/#infoObject
      info: {
        title: 'Car auto service API',
        version: '1.0.0',
        description: 'Test Express API with autogenerated swagger doc',
        termsOfService: "http:localhost:4000/",
        contact: {
                name: "API Support",
                email: "stephenngetich5@gmail.com"
      },
      },
    },
    // List of files to be processes. You can also set globs './routes/*.js'
    apis: ['./routes/*.js'],
    
  };
  const specs = swaggerJsdoc(options);


mongoose.connect('mongodb://127.0.0.1:27017/safaricomHackathon', { useNewUrlParser: true, useCreateIndex: true });
mongoose.connection.on('error', error => console.log(error));
mongoose.connection.on('open', () => console.log("DB COnnected"));
mongoose.Promise = global.Promise;

require('./auth/auth');

var indexRouter = require('./routes/index');
var apiRouter = require('./routes/api');
const passport = require('passport');

var app = express();


app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());



app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));
app.use('/', indexRouter);
app.use('/api', passport.authenticate('jwt', { session: false }),apiRouter);

app.listen(4000,()=>{console.log('lIstening at port 4000')})
